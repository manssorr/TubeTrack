I'll create a comprehensive prompt for Replit to build your YouTube learning progress tracker:

---

**Build a YouTube Playlist Learning Progress Tracker**

Create a web application that tracks my learning progress through YouTube playlists with minimal clicks and effort. The app should help me understand my learning pace and estimate completion time.

## Core Requirements:

### 1. Input Methods
- Accept a YouTube playlist URL (fetch video details via YouTube API)
- Alternative: Accept JSON input with this structure:
```json
[
  {
    "title": "Video Title",
    "url": "youtube.com/watch?v=...",
    "duration": 3600  // in seconds
  }
]
```

### 2. Video Player & Progress Tracking
- **Embedded YouTube player** with controls
- **One-click checkpoint button** to mark current timestamp as "watched up to here"
- Auto-save progress every 30 seconds
- Visual progress bar for each video showing watched portions
- Resume from last position when reopening a video

### 3. Note-Taking System
- Text area below/beside video player for notes
- **Timestamp button** that inserts current video time into notes (format: [MM:SS])
- Notes auto-save as you type
- Clicking a timestamp in notes jumps to that video position

### 4. Analytics Dashboard
Display these metrics prominently:
- **Videos completed**: X of Y videos done
- **Overall progress**: XX% of total playlist duration watched
- **Learning ratio**: "You take ~X hours to complete 1 hour of content"
- **Time estimation**: "At current pace, ~X hours remaining to complete playlist"
- **Total time spent**: Actual hours spent watching (including rewatches/pauses)
- **Effective watch time**: Actual video duration covered

### 5. UI/UX Requirements
- **Minimal click design**: 
  - Spacebar to pause/play
  - Enter key to mark progress checkpoint
  - Keyboard shortcut (Ctrl+T) to insert timestamp in notes
- Clean, distraction-free interface
- Dark mode option
- Progress persists in browser localStorage
- Export/import progress data as JSON

### 6. Technical Implementation
- Use React or vanilla JavaScript
- YouTube IFrame API for embedded player
- LocalStorage for data persistence
- Responsive design for desktop/tablet
- Simple one-page application

### 7. Data Structure to Track
```javascript
{
  playlistId: "...",
  videos: [{
    id: "video_id",
    title: "...",
    duration: 3600,
    watchedSegments: [[0, 1200], [1500, 1800]], // watched from 0-20min and 25-30min
    lastPosition: 1800,
    notes: "...",
    actualTimeSpent: 5400, // total seconds spent on this video
    completed: false
  }],
  startDate: "2024-01-01",
  totalActualTime: 10800 // total seconds spent learning
}
```

### 8. Key Features Priority
1. **HIGH**: Embedded player with progress tracking
2. **HIGH**: Learning ratio calculation & time estimates
3. **HIGH**: Timestamped notes with click-to-jump
4. **MEDIUM**: Visual progress bars
5. **LOW**: Keyboard shortcuts

Build this as a single HTML file with inline CSS and JavaScript if possible, or as a simple React app. Focus on functionality over aesthetics, but ensure the interface is clean and usable. The main goal is to minimize friction in tracking progress while providing valuable insights about learning pace.

---

This prompt should give Replit's AI a clear understanding of what you need. The key aspects emphasized are minimal interaction for progress tracking, learning pace analytics, and integrated note-taking with timestamps.